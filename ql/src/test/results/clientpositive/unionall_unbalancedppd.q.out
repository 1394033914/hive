PREHOOK: query: drop table if exists union_all_bug_test_1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists union_all_bug_test_1
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists union_all_bug_test_2
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists union_all_bug_test_2
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table if not exists union_all_bug_test_1
(
f1 int,
f2 int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: create table if not exists union_all_bug_test_1
(
f1 int,
f2 int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_all_bug_test_1
PREHOOK: query: create table if not exists union_all_bug_test_2
(
f1 int
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: create table if not exists union_all_bug_test_2
(
f1 int
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@union_all_bug_test_2
PREHOOK: query: explain SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
PREHOOK: type: QUERY
POSTHOOK: query: explain SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: union_all_bug_test_1
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Select Operator
              expressions: f1 (type: int), if(true, f1, f2) (type: int)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Filter Operator
                predicate: (_col1 = 1) (type: boolean)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: int)
                  outputColumnNames: _col0
                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                  Union
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    Select Operator
                      expressions: _col0 (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
          TableScan
            alias: union_all_bug_test_2
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: false (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Select Operator
                expressions: f1 (type: int)
                outputColumnNames: _col0
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                Union
                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: int)
                    outputColumnNames: _col0
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_1
PREHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_1
POSTHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
PREHOOK: query: insert into table union_all_bug_test_2 select count(*) from union_all_bug_test_2
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_2
PREHOOK: Output: default@union_all_bug_test_2
POSTHOOK: query: insert into table union_all_bug_test_2 select count(*) from union_all_bug_test_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_2
POSTHOOK: Output: default@union_all_bug_test_2
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
PREHOOK: query: insert into table union_all_bug_test_1 select 0,0 from union_all_bug_test_2
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_2
PREHOOK: Output: default@union_all_bug_test_1
POSTHOOK: query: insert into table union_all_bug_test_1 select 0,0 from union_all_bug_test_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_2
POSTHOOK: Output: default@union_all_bug_test_1
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
PREHOOK: query: insert into table union_all_bug_test_1 select 1,1 from union_all_bug_test_2
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_2
PREHOOK: Output: default@union_all_bug_test_1
POSTHOOK: query: insert into table union_all_bug_test_1 select 1,1 from union_all_bug_test_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_2
POSTHOOK: Output: default@union_all_bug_test_1
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
PREHOOK: query: insert into table union_all_bug_test_2 select count(*) from union_all_bug_test_2
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_2
PREHOOK: Output: default@union_all_bug_test_2
POSTHOOK: query: insert into table union_all_bug_test_2 select count(*) from union_all_bug_test_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_2
POSTHOOK: Output: default@union_all_bug_test_2
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
PREHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_1
PREHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_1
POSTHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
1
PREHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 0)
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_1
PREHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 0)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_1
POSTHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
0
0
1
PREHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1 or filter = 0)
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_1
PREHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (filter = 1 or filter = 0)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_1
POSTHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
0
1
0
1
PREHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (f1 = 1)
PREHOOK: type: QUERY
PREHOOK: Input: default@union_all_bug_test_1
PREHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: query: SELECT f1
FROM (

SELECT
f1
, if('helloworld' like '%hello%' ,f1,f2) as filter
FROM union_all_bug_test_1

union all

select
f1
, 0 as filter
from union_all_bug_test_2
) A
WHERE (f1 = 1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@union_all_bug_test_1
POSTHOOK: Input: default@union_all_bug_test_2
#### A masked pattern was here ####
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f1 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_1.f2 SIMPLE []
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
POSTHOOK: Lineage: union_all_bug_test_2.f1 EXPRESSION [(union_all_bug_test_2)union_all_bug_test_2.null, ]
1
1
