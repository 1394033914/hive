/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.hadoop.hive.metastore.api;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class BinaryColumnStatsData implements org.apache.thrift.TBase<BinaryColumnStatsData, BinaryColumnStatsData._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BinaryColumnStatsData");

  private static final org.apache.thrift.protocol.TField MAX_COL_LEN_FIELD_DESC = new org.apache.thrift.protocol.TField("maxColLen", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField AVG_COL_LEN_FIELD_DESC = new org.apache.thrift.protocol.TField("avgColLen", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_NULLS_FIELD_DESC = new org.apache.thrift.protocol.TField("numNulls", org.apache.thrift.protocol.TType.I64, (short)3);

  private long maxColLen; // required
  private double avgColLen; // required
  private long numNulls; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MAX_COL_LEN((short)1, "maxColLen"),
    AVG_COL_LEN((short)2, "avgColLen"),
    NUM_NULLS((short)3, "numNulls");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MAX_COL_LEN
          return MAX_COL_LEN;
        case 2: // AVG_COL_LEN
          return AVG_COL_LEN;
        case 3: // NUM_NULLS
          return NUM_NULLS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MAXCOLLEN_ISSET_ID = 0;
  private static final int __AVGCOLLEN_ISSET_ID = 1;
  private static final int __NUMNULLS_ISSET_ID = 2;
  private BitSet __isset_bit_vector = new BitSet(3);

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MAX_COL_LEN, new org.apache.thrift.meta_data.FieldMetaData("maxColLen", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AVG_COL_LEN, new org.apache.thrift.meta_data.FieldMetaData("avgColLen", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUM_NULLS, new org.apache.thrift.meta_data.FieldMetaData("numNulls", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BinaryColumnStatsData.class, metaDataMap);
  }

  public BinaryColumnStatsData() {
  }

  public BinaryColumnStatsData(
    long maxColLen,
    double avgColLen,
    long numNulls)
  {
    this();
    this.maxColLen = maxColLen;
    setMaxColLenIsSet(true);
    this.avgColLen = avgColLen;
    setAvgColLenIsSet(true);
    this.numNulls = numNulls;
    setNumNullsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BinaryColumnStatsData(BinaryColumnStatsData other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.maxColLen = other.maxColLen;
    this.avgColLen = other.avgColLen;
    this.numNulls = other.numNulls;
  }

  public BinaryColumnStatsData deepCopy() {
    return new BinaryColumnStatsData(this);
  }

  @Override
  public void clear() {
    setMaxColLenIsSet(false);
    this.maxColLen = 0;
    setAvgColLenIsSet(false);
    this.avgColLen = 0.0;
    setNumNullsIsSet(false);
    this.numNulls = 0;
  }

  public long getMaxColLen() {
    return this.maxColLen;
  }

  public void setMaxColLen(long maxColLen) {
    this.maxColLen = maxColLen;
    setMaxColLenIsSet(true);
  }

  public void unsetMaxColLen() {
    __isset_bit_vector.clear(__MAXCOLLEN_ISSET_ID);
  }

  /** Returns true if field maxColLen is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxColLen() {
    return __isset_bit_vector.get(__MAXCOLLEN_ISSET_ID);
  }

  public void setMaxColLenIsSet(boolean value) {
    __isset_bit_vector.set(__MAXCOLLEN_ISSET_ID, value);
  }

  public double getAvgColLen() {
    return this.avgColLen;
  }

  public void setAvgColLen(double avgColLen) {
    this.avgColLen = avgColLen;
    setAvgColLenIsSet(true);
  }

  public void unsetAvgColLen() {
    __isset_bit_vector.clear(__AVGCOLLEN_ISSET_ID);
  }

  /** Returns true if field avgColLen is set (has been assigned a value) and false otherwise */
  public boolean isSetAvgColLen() {
    return __isset_bit_vector.get(__AVGCOLLEN_ISSET_ID);
  }

  public void setAvgColLenIsSet(boolean value) {
    __isset_bit_vector.set(__AVGCOLLEN_ISSET_ID, value);
  }

  public long getNumNulls() {
    return this.numNulls;
  }

  public void setNumNulls(long numNulls) {
    this.numNulls = numNulls;
    setNumNullsIsSet(true);
  }

  public void unsetNumNulls() {
    __isset_bit_vector.clear(__NUMNULLS_ISSET_ID);
  }

  /** Returns true if field numNulls is set (has been assigned a value) and false otherwise */
  public boolean isSetNumNulls() {
    return __isset_bit_vector.get(__NUMNULLS_ISSET_ID);
  }

  public void setNumNullsIsSet(boolean value) {
    __isset_bit_vector.set(__NUMNULLS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MAX_COL_LEN:
      if (value == null) {
        unsetMaxColLen();
      } else {
        setMaxColLen((Long)value);
      }
      break;

    case AVG_COL_LEN:
      if (value == null) {
        unsetAvgColLen();
      } else {
        setAvgColLen((Double)value);
      }
      break;

    case NUM_NULLS:
      if (value == null) {
        unsetNumNulls();
      } else {
        setNumNulls((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MAX_COL_LEN:
      return Long.valueOf(getMaxColLen());

    case AVG_COL_LEN:
      return Double.valueOf(getAvgColLen());

    case NUM_NULLS:
      return Long.valueOf(getNumNulls());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MAX_COL_LEN:
      return isSetMaxColLen();
    case AVG_COL_LEN:
      return isSetAvgColLen();
    case NUM_NULLS:
      return isSetNumNulls();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BinaryColumnStatsData)
      return this.equals((BinaryColumnStatsData)that);
    return false;
  }

  public boolean equals(BinaryColumnStatsData that) {
    if (that == null)
      return false;

    boolean this_present_maxColLen = true;
    boolean that_present_maxColLen = true;
    if (this_present_maxColLen || that_present_maxColLen) {
      if (!(this_present_maxColLen && that_present_maxColLen))
        return false;
      if (this.maxColLen != that.maxColLen)
        return false;
    }

    boolean this_present_avgColLen = true;
    boolean that_present_avgColLen = true;
    if (this_present_avgColLen || that_present_avgColLen) {
      if (!(this_present_avgColLen && that_present_avgColLen))
        return false;
      if (this.avgColLen != that.avgColLen)
        return false;
    }

    boolean this_present_numNulls = true;
    boolean that_present_numNulls = true;
    if (this_present_numNulls || that_present_numNulls) {
      if (!(this_present_numNulls && that_present_numNulls))
        return false;
      if (this.numNulls != that.numNulls)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_maxColLen = true;
    builder.append(present_maxColLen);
    if (present_maxColLen)
      builder.append(maxColLen);

    boolean present_avgColLen = true;
    builder.append(present_avgColLen);
    if (present_avgColLen)
      builder.append(avgColLen);

    boolean present_numNulls = true;
    builder.append(present_numNulls);
    if (present_numNulls)
      builder.append(numNulls);

    return builder.toHashCode();
  }

  public int compareTo(BinaryColumnStatsData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    BinaryColumnStatsData typedOther = (BinaryColumnStatsData)other;

    lastComparison = Boolean.valueOf(isSetMaxColLen()).compareTo(typedOther.isSetMaxColLen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxColLen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxColLen, typedOther.maxColLen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAvgColLen()).compareTo(typedOther.isSetAvgColLen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvgColLen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avgColLen, typedOther.avgColLen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumNulls()).compareTo(typedOther.isSetNumNulls());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumNulls()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numNulls, typedOther.numNulls);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // MAX_COL_LEN
          if (field.type == org.apache.thrift.protocol.TType.I64) {
            this.maxColLen = iprot.readI64();
            setMaxColLenIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // AVG_COL_LEN
          if (field.type == org.apache.thrift.protocol.TType.DOUBLE) {
            this.avgColLen = iprot.readDouble();
            setAvgColLenIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // NUM_NULLS
          if (field.type == org.apache.thrift.protocol.TType.I64) {
            this.numNulls = iprot.readI64();
            setNumNullsIsSet(true);
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(MAX_COL_LEN_FIELD_DESC);
    oprot.writeI64(this.maxColLen);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(AVG_COL_LEN_FIELD_DESC);
    oprot.writeDouble(this.avgColLen);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NUM_NULLS_FIELD_DESC);
    oprot.writeI64(this.numNulls);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BinaryColumnStatsData(");
    boolean first = true;

    sb.append("maxColLen:");
    sb.append(this.maxColLen);
    first = false;
    if (!first) sb.append(", ");
    sb.append("avgColLen:");
    sb.append(this.avgColLen);
    first = false;
    if (!first) sb.append(", ");
    sb.append("numNulls:");
    sb.append(this.numNulls);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetMaxColLen()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxColLen' is unset! Struct:" + toString());
    }

    if (!isSetAvgColLen()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'avgColLen' is unset! Struct:" + toString());
    }

    if (!isSetNumNulls()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'numNulls' is unset! Struct:" + toString());
    }

  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

